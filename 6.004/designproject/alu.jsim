* Helper Subcircuits

* 3-input full adder: inputs are a, b, ci, outputs are s, co
.subckt FA a b ci s co
    Xg0 a b y xor2
    Xg1 y ci s xor2
    Xg2 a b d nand2
    Xg3 b ci e nand2
    Xg4 a ci f nand2
    Xg5 d e f co nand3
    Xg6 d e g nand2
.ends

.subckt NOR32 S[31:0] Z
    Xnor0 S[31:24] S[23:16] S[15:8] S[7:0] I[7:0] nor4
    Xnand0 I[7:6] I[5:4] I[3:2] I[1:0] I2[1:0] nand4
    Xnor1 I2[1] I2[0] Z nor2
.ends

.subckt GETV A XB OUT V
    Xid1 OUT notS inverter
    Xid2 A notA inverter
    Xid3 XB notXB inverter
    Xid4 XB A notS r1 and3
    Xid5 notA notXB OUT r2 and3
    Xid6 r1 r2 V or2
.ends

.subckt CMPLT N V LT
    Xor N V LT xor2
.ends

.subckt CMPLE Z N V L
    Xid1 N V LT xor2
    Xid2 Z LT L or2
.ends

.subckt ADDER32 A[31:0] B[31:0] ci OUT[31:0] 
    Xid1 A[0] B[0] ci OUT[0] C[0] FA
    Xid2 A[31:1] B[31:1] C[30:0] OUT[31:1] C[31:1] FA 
.ends

.subckt CarryLookAheadAdder32 A[31:0] B[31:0] c0 S[31:0]

    * negate B
    Xneg B[31:0] c0#32 Bx[31:0] xor2
    Xcsa0 A[31:0] Bx[31:0] 0#32 szero[31:0] xor3
    Xcsa1 A[31:0] Bx[31:0] 0#32 sone[31:0] xor3
    Xcsam cone[31:0] szero[31:0] sone[31:0] s[31:0] mux2

    * do the carry lookahead
    Xcl A[31:0] Bx[31:0] Gin[31:0] Pin[31:0] GetGP

    *** Lookaheads ***
    * lookaheads level 1
    xl1a Gin[1:0] Pin[1:0] Gtwo[0] Ptwo[0] LookAheadBlock
    xl1b Gin[3:2] Pin[3:2] Gtwo[1] Ptwo[1] LookAheadBlock
    xl1c Gin[5:4] Pin[5:4] Gtwo[2] Ptwo[2] LookAheadBlock
    xl1d Gin[7:6] Pin[7:6] Gtwo[3] Ptwo[3] LookAheadBlock
    xl1e Gin[9:8] Pin[9:8] Gtwo[4] Ptwo[4] LookAheadBlock
    xl1f Gin[11:10] Pin[11:10] Gtwo[5] Ptwo[5] LookAheadBlock
    xl1g Gin[13:12] Pin[13:12] Gtwo[6] Ptwo[6] LookAheadBlock
    xl1h Gin[15:14] Pin[15:14] Gtwo[7] Ptwo[7] LookAheadBlock
    xl1i Gin[17:16] Pin[17:16] Gtwo[8] Ptwo[8] LookAheadBlock
    xl1j Gin[19:18] Pin[19:18] Gtwo[9] Ptwo[9] LookAheadBlock
    xl1k Gin[21:20] Pin[21:20] Gtwo[10] Ptwo[10] LookAheadBlock
    xl1l Gin[23:22] Pin[23:22] Gtwo[11] Ptwo[11] LookAheadBlock
    xl1m Gin[25:24] Pin[25:24] Gtwo[12] Ptwo[12] LookAheadBlock
    xl1n Gin[27:26] Pin[27:26] Gtwo[13] Ptwo[13] LookAheadBlock
    xl1o Gin[29:28] Pin[29:28] Gtwo[14] Ptwo[14] LookAheadBlock
    xl1p Gin[31:30] Pin[31:30] Gtwo[15] Ptwo[15] LookAheadBlock

    * lookaheads level 2
    xl2a Gtwo[1:0]   Ptwo[1:0]   Gthree[0] Pthree[0] LookAheadBlock
    xl2b Gtwo[3:2]   Ptwo[3:2]   Gthree[1] Pthree[1] LookAheadBlock
    xl2c Gtwo[5:4]   Ptwo[5:4]   Gthree[2] Pthree[2] LookAheadBlock
    xl2d Gtwo[7:6]   Ptwo[7:6]   Gthree[3] Pthree[3] LookAheadBlock
    xl2e Gtwo[9:8]   Ptwo[9:8]   Gthree[4] Pthree[4] LookAheadBlock
    xl2f Gtwo[11:10] Ptwo[11:10] Gthree[5] Pthree[5] LookAheadBlock
    xl2g Gtwo[13:12] Ptwo[13:12] Gthree[6] Pthree[6] LookAheadBlock
    xl2h Gtwo[15:14] Ptwo[15:14] Gthree[7] Pthree[7] LookAheadBlock

    * lookaheads level 3
    xl3a Gthree[1:0] Pthree[1:0] Gfour[0] Pfour[0] LookAheadBlock
    xl3b Gthree[3:2] Pthree[3:2] Gfour[1] Pfour[1] LookAheadBlock
    xl3c Gthree[5:4] Pthree[5:4] Gfour[2] Pfour[2] LookAheadBlock
    xl3d Gthree[7:6] Pthree[7:6] Gfour[3] Pfour[3] LookAheadBlock

    * lookaheads level 4
    xl4a Gfour[1:0] Pfour[1:0] Gfive[0] Pfive[0] LookAheadBlock
    xl4b Gfour[3:2] Pfour[3:2] Gfive[1] Pfive[1] LookAheadBlock

    * lookaheads level 5
    xl5a Gfive[1:0] Pfive[1:0] Gsix[0] Gsix[0] lookAheadBlock


    *** Carries ***
    * carries level 1
    xc1a ctwo[0]  Gin[0]  Pin[0]  cone[0] Carry  
    xc1b ctwo[1]  Gin[1]  Pin[1]  cone[1] Carry 
    xc1c ctwo[2]  Gin[2]  Pin[2]  cone[2] Carry 
    xc1d ctwo[3]  Gin[3]  Pin[3]  cone[3] Carry 
    xc1e ctwo[4]  Gin[4]  Pin[4]  cone[4] Carry 
    xc1f ctwo[5]  Gin[5]  Pin[5]  cone[5] Carry 
    xc1g ctwo[6]  Gin[6]  Pin[6]  cone[6] Carry 
    xc1h ctwo[7]  Gin[7]  Pin[7]  cone[7] Carry 
    xc1i ctwo[8]  Gin[8]  Pin[8]  cone[8] Carry 
    xc1j ctwo[9]  Gin[9]  Pin[9]  cone[9] Carry 
    xc1k ctwo[10] Gin[10] Pin[10] cone[10] Carry 
    xc1l ctwo[11] Gin[11] Pin[11] cone[11] Carry
    xc1m ctwo[12] Gin[12] Pin[12] cone[12] Carry
    xc1n ctwo[13] Gin[13] Pin[13] cone[13] Carry
    xc1o ctwo[14] Gin[14] Pin[14] cone[14] Carry
    xc1p ctwo[15] Gin[15] Pin[15] cone[15] Carry

    * carries level 2
    xc1a cthree[0]  Gtwo[0]  Ptwo[0]  ctwo[0] Carry  
    xc1b cthree[1]  Gtwo[1]  Ptwo[1]  ctwo[1] Carry 
    xc1c cthree[2]  Gtwo[2]  Ptwo[2]  ctwo[2] Carry 
    xc1d cthree[3]  Gtwo[3]  Ptwo[3]  ctwo[3] Carry 
    xc1e cthree[4]  Gtwo[4]  Ptwo[4]  ctwo[4] Carry 
    xc1f cthree[5]  Gtwo[5]  Ptwo[5]  ctwo[5] Carry 
    xc1g cthree[6]  Gtwo[6]  Ptwo[6]  ctwo[6] Carry 
    xc1h cthree[7]  Gtwo[7]  Ptwo[7]  ctwo[7] Carry 

    * carries level 3
    xc1a cfour[0]  Gthree[0]  Pthree[0]  cthree[0] Carry  
    xc1b cfour[1]  Gthree[1]  Pthree[1]  cthree[1] Carry 
    xc1c cfour[2]  Gthree[2]  Pthree[2]  cthree[2] Carry 
    xc1d cfour[3]  Gthree[3]  Pthree[3]  cthree[3] Carry 

    * carries level 4
    xc1a cfive[0]  Gfour[0]  Pfour[0]  cfour[0] Carry  
    xc1b cfive[1]  Gfour[1]  Pfour[1]  cfour[1] Carry 

    * carries level 5
    xc1a csix[0]  Gfive[0]  Pfive[0]  cfive[0] Carry  
.ends

.subckt GetGP a b g p 
    * Compute G and P
    XgetG a b g and2
    XgetP a b p xor2
.ends

.subckt LookAheadBlock gh ph gl pl ghl phl 
    * Does the logic for G_{hl} = G_h + P_h*G_l
    Xphgl0 ph gl phglinv nand2
    Xphgl phglinv phgl inv
    Xghl0 gh phgl ghlinv nor2
    Xghl ghlinv ghl inv

    * Does the logic for P_{hl} = P_h*P_l
    Xphl0 ph pl phlinv nand2
    xphl phlinv phl inv
.ends

.subckt Carry cin G P cout[1:0]
    Xto cin P x nand2
    Xt1 x y inv
    Xt2 y G z nor2
    Xt3 z cout[1] inv
    Xt4 cin cout[0] buffer
.ends

.subckt SHLR A[31:0] B[4:0] bool OUT[31:0]
    Xmux bool#32 A[31:0] A[0:31] AX[31:0] mux2

    Xb4a B[4]#16 AX[31:16] AX[15:0] W[31:16] mux2
    Xb4b B[4]#16 AX[15:0] 0#16 W[15:0] mux2

    Xb3a B[3]#24 W[31:8] W[23:0] X[31:8] mux2
    Xb3b B[3]#8 W[7:0] 0#8 X[7:0] mux2

    Xb2a B[2]#28 X[31:4] X[27:0] Y[31:4] mux2
    Xb2b B[2]#4 X[3:0] 0#4 Y[3:0] mux2

    Xb1a B[1]#30 Y[31:2] Y[29:0] Z[31:2] mux2
    Xb1b B[1]#2 Y[1:0] 0#2 Z[1:0] mux2

    Xb0a B[0]#31 Z[31:1] Z[30:0] SL[31:1] mux2
    Xb0b B[0] Z[0] 0 SL[0] mux2

    Xmux2 bool#32 SL[31:0] SL[0:31] OUT[31:0] mux2
.ends

.subckt SRA A[31:0] B[4:0] SL[31:0]
    Xb4a B[4]#16 A[15:0] A[31:16] W[15:0] mux2
    Xb4b B[4]#16 A[31:16] A[31]#16 W[31:16] mux2

    Xb3a B[3]#24 W[23:0] W[31:8] X[23:0] mux2
    Xb3b B[3]#8 W[31:24] A[31]#8 X[31:24] mux2

    Xb2a B[2]#28 X[27:0] X[31:4] Y[27:0] mux2
    Xb2b B[2]#4 X[31:28] A[31]#4 Y[31:28] mux2

    Xb1a B[1]#30 Y[29:0] Y[31:2] Z[29:0] mux2
    Xb1b B[1]#2 Y[31:30] A[31]#2 Z[31:30] mux2

    Xb0a B[0]#31 Z[30:0] Z[31:1] SL[30:0] mux2
    Xb0b B[0] Z[31] A[31] SL[31] mux2
.ends



* END OF HELPER FUNCTIONS

.subckt BOOL alufn[3:0] A[31:0] B[31:0] OUT[31:0]
    Xmux4 A[31:0] B[31:0] alufn[0]#32 alufn[1]#32 alufn[2]#32 alufn[3]#32 OUT[31:0] mux4
.ends

.subckt ARITH alufn[1:0] A[31:0] B[31:0] OUT[31:0] Z V N
    Xid1 B[31:0] alufn[0]#32 XB[31:0] xor2
    Xid2 A[31:0] XB[31:0] alufn[0] SUM[31:0] CarryLookAheadAdder32
    Xid4 alufn[1]#32 SUM[31:0] 0#32 OUT[31:0] mux2
    Xid5 SUM[31] N buffer
    Xid6 SUM[31:0] Z NOR32
    Xid7 A[31] XB[31] SUM[31] V GETV
.ends

.subckt SHIFT alufn[1:0] A[31:0] B[31:0] OUT[31:0]
    Xsra A[31:0] B[4:0] SRA[31:0] SRA
    Xshlr A[31:0] B[4:0] alufn[0] SHLR[31:0] SHLR
    Xmux alufn[0]#32 0#32 SRA[31:0] SR[31:0] mux2
    Xmux2 alufn[1]#32 SHLR[31:0] SR[31:0] OUT[31:0] mux2
.ends

.subckt CMP alufn3 alufn1 Z V N OUT[31:0]
    Xlt N V LT CMPLT
    Xle Z N V LE CMPLE
    Xmux4 alufn1 alufn3 Z LT LE 0 OUT[0] mux4
    .connect OUT[31:1] 0
.ends

.subckt alu alufn[4:0] a[31:0] b[31:0] out[31:0] z v n
    *** Generate outputs from each of BOOL, SHIFT, ARITH, CMP subcircuits:
    xbool alufn[3:0] a[31:0] b[31:0] boolout[31:0] BOOL
    xshift alufn[1:0] a[31:0] b[31:0] shiftout[31:0] SHIFT
    xarith alufn[1:0] a[31:0] b[31:0] arithout[31:0] z v n ARITH
    xcmp alufn[3] alufn[1] z v n cmpout[31:0] CMP

    *** Combine them, using three multiplexors:
    xmux1 alufn[4]#32 nonbool[31:0] boolout[31:0] out[31:0] mux2
    xmux2 alufn[2]#32 arithshift[31:0] cmpout[31:0] nonbool[31:0] mux2
    xmux3 alufn[3]#32 arithout[31:0] shiftout[31:0] arithshift[31:0] mux2
.ends
